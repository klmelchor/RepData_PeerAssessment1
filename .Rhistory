qplot(votes, rating, data = movies)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
asd
xyplot
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamond,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(o)
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xCC
library(swirl)
swirl()
scatterplot
scatter.smooth(x, y, pch = 19, col = rgb(0,.5,.5))
plot(x, y, pch = 19, col = rgb(0,.5,.5))
plot(x, y, pch = 19, col = rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showME(cols)
showMe(cols)
pal <- ColorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
ste(mpg)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = "manufacturer")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, aes(fill = drv))
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth() = "lm"
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid = .~drv
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink, size = 4, alpah = .5")
g+geom_point(color = "pink", size = 4, alpah = .5)
g+geom_point(color = "pink", size = 4, alpah =1/)
g+geom_point(color = "pink", size = 4, alpah =1/2)
g+geom_point(color = "pink", size = 4, alpha =1/2)
g+geom_point(size = 4, alpha =1/2, aes(color = drv))
g+geom_pint(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx, myy, type="l",ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, factor(year)))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(formula=drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill = cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm") + facets_grid(.~cut)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm") + facet_grid(.~cut)
qplot(carat, price, data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplots(diamonds, aes(depth,price))
g <- ggplot(diamonds, aes(depth,price))
g+geom_points(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_points(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamnods, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
install.packages(fields)
install.packages("fields")
swirl()
library(swirl)
swirl()
cmat
points(cx,cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points (x,y, pch=19, cex=2, col=cols1[newClust])
newCLust
newClust
str(newClust)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx,newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch=19, cex=2, col=cols2[newClust2]
points(x,y, pch=19, cex=2, col=cols2[newClust2])
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col = c("black", "red","green"), pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
exit
bye()
library(swirl)
swirl()
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
library(swirl)
swirl()
svd2$d
dim(faceData)
a1 <- (svd1$u[,1]*svd$d[1])%*%t(svd1$v[,1])
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5])
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*%diag(svd1$d[1:10])%*%t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562:"563"])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scales(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(c(sub1[,10:12], maxCon)
mdist <- dist(c(sub1[,10:12], maxCon))
midts
mdist
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562:563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562:563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$cluster)
dim(kClust$centers)
laying <- kClust$size == 29
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1;12], pch = 19, ylab = "Laying Cluster")
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1)
names(sub1[,1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- cnames[[1]]
names(pm0) <- cnames[[1]][5]
names <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
library(swirl)
swirl()
x0 <- pm0$Sample.Value
x0 <- pm0$Sample.Value
x0 <- pm0$Sample.Value
info()
x0 <- pm0$Sample.Value
x0
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
is.na(x1)
sum(is.na(x1))
mean(is.na(x1))
summary(x0)
summary(x11)
summary(x1)
boxplot(x0,x1)
library(swirl)
swirl()
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
head(negative)
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
dates <- pm1$Date
pm1
cnames <- strsplit(cnames, "|", fixed = TRUE)
names(pm1) <- make.names(cnames[[1]][wcol])
head(pm1)
dates <- pm1$Date
str(dates)
dates <- as.Dates(as.character(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
swirl()
names(pm0) <- make.names(cnames[[1]][wcol])
swirl()
head(pm0)
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
head(pm1)
swirl()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(X1))
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1 < 0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
head(cnt0)
?nrow
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(lwd = 2, median(x0sub, nar.rm = TRUE))
?abline
plot(dates0, x0sub, pch = 20)
abline(lwd = 2, h = median(x0sub, nar.rm = TRUE))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm =TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm =TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
head(d0)
head(mn0)
names(mn1)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(0.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],xlim=c(0.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(0.5,2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(swirl)
swirl()
swirl()
mrg[mrg$mean.x < mrg$mean.y, ]
g <- ggplot(mpg, aes(displ,hwy) )
summary(g)
g+geom_point()
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
load("C:/Users/Meden Pare/Desktop/Data Science MP/Exploratory Analysis/week4_workzone.RData")
g <- ggplot(baltimore_total, aes(x_coor, ))
library(ggplot2)
?rownames
?row.names
row.names(baltimore_total)
plot(row.names(baltimore_total), baltimore[1,])
plot(row.names(baltimore_total), baltimore_total[1,])
points(row.names(baltimore_total), baltimore_total[2,])
points(row.names(baltimore_total), baltimore_total[3,])
points(row.names(baltimore_total), baltimore_total[4,])
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
29/36
1-3/36
deck
52
1/13
0
12/52
2/51
.8*1.6
.8*1.6/2
.64
mypdf
integrate(mypdf, 0, 1.6)
(0.5^2)/4
2^0.5
.997*.001
(1-.997)*(1-.001)
(1-.985)*(1-.001)
0.000997 / (0.014985 + 0.000997)
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5 *( E(X_hi)+E(X_lo)
| )
.5*(E(edh)+E(edl))
ad
gg
\gggggg
.5*7
library(swirl)
swirl()
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
?qunif
qunif(0.75, 0, 1)
x <- 1:4
p <- x/sum(x)
p
x*p
sum(x*p)
rm(list=ls())
load("~/.RData")
rm(list=ls())
save.image("~/.RData")
library(swirl)
swirl()
dice_sqr
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair -3.5^2
edh
sum(dice_high*dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
play()
?rnorm
?matrix
?sd
?apply
try1 <- rnorm(10000)
nxt()
try2 <- matrix(rnorm(10000), 1000)
play()
?matrix
nxt()
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000),1000),1,mean))
sd(apply(matrix(rpois(10000,4),1000),1,mean))
0.5/sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
setwd("C:/Users/Meden Pare/Desktop/Data Science MP/GitHub/RepData_PeerAssessment1/")
load("C:/Users/Meden Pare/Desktop/Data Science MP/Reproducible Research/rr_proj1.RData")
library(knitr)
knit2html("PA1_template.html")
knit2html("PA1_template.md")
knit2html("PA1_template.html")
